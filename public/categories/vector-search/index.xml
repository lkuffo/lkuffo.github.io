<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Vector-Search on Leonardo Kuffo</title>
    <link>http://localhost:1313/categories/vector-search/</link>
    <description>Recent content in Vector-Search on Leonardo Kuffo</description>
    <image>
      <title>Leonardo Kuffo</title>
      <url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Mar 2025 12:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/vector-search/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Graviton 3 &gt; Graviton 4 for Vector Similarity Search</title>
      <link>http://localhost:1313/graviton3-better-than-graviton4-vss/</link>
      <pubDate>Thu, 20 Mar 2025 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/graviton3-better-than-graviton4-vss/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;TL;DR: &lt;strong&gt;If you are doing vector search with a vector library that supports SVE, you should use a Graviton 3 machine. It is cheaper, and it will also deliver more raw performance.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;A few months ago, we started working on a vertical layout for vector similarity search (&lt;a href=&#34;https://github.com/cwida/PDX&#34;&gt;PDX&lt;/a&gt;). As part of the benchmarks that we were running on different microarchitectures and vector systems like FAISS, Milvus, and Usearch, there was an observation that puzzled us: &lt;strong&gt;Graviton3 performed better than Graviton4 in almost all vector search scenarios&lt;/strong&gt;, not only in queries per dollar (QP$) but also in queries per second (QPS). This was the case across vector libraries and even in our implementations of vector search algorithms. Here is one example of the QPS and QP$ of both microarchitectures on queries to an IVF index on &lt;code&gt;float32&lt;/code&gt; vectors with FAISS compiled with SVE.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
